[00:00:00]
>> Brian Holt: An img, this is a self-closing tag, it's a or a void tag,
>> Brian Holt: And it's an image. Right, it makes sense that you don't have anything inside of an image, an image is in and of itself enough. Its a one atomic unit that cannot be broken apart.

[00:00:18]

>> Brian Holt: So,
>> Brian Holt: Yeah, we'll get into that in just a second. So, you give an image a source, right, src.
>> Brian Holt: And it'll looks something like this image source = this will be some sort of URL pointing to a picture that's being host something on the Internet. And so, every image needs a source and it also needs an alt, A-L-T.

[00:00:44]

>> Brian Holt: Going back to screen readers, obviously, if you're blind you can't see images. However, it can be really important what's in those images for someone to understand your website, right? Like if you're having like, this is an arrow pointing at something or has other meaning to it so you give it an alt.

[00:01:01]
So that when the screen reader arrives to this particular image, it has some texts to say about it, right?
>> Brian Holt: So if someone, let's actually just copy and paste this up here.
>> Brian Holt: Come back up here.
>> Brian Holt: So you have this little puppy picture that pops up.
>> Brian Holt: But let's say this image broke, right?

[00:01:29]
It actually will show them the alt text, like for whatever reason, if that image got moved or broken or something like that, so it also doubles as like being like a back up for it as well. But also, if someone is using a screen reader and they tap on to this and it goes they obviously can't see the picture it will say, this is a picture of an adorable puppy, right?

[00:01:48]
So, it's important to have descriptive alt as well.
>> Brian Holt: Every image tag should have an alt, 100% of the time always.
>> Brian Holt: And again, that's being a responsible citizen that's recognizing that the Internet is for everyone.
>> Brian Holt: So, what is a subtle difference that often people have a hard time with when they're learning web development is you can actually put images on a page with CSS.

[00:02:23]
So you don't have to use an img tag, you can put it on there via CSS.
>> Brian Holt: The only time that you wanna do this, if it's purely decorative, right? And that, if you have a background image on your page, right, that's purely serves just like make your page look nice, and it's purely for aesthetic value, then that's when you're gonna use CSS to put the image on there.

[00:02:48]
But if it's for something like real content, right, like if maybe we have an adoption website for puppies, and we're putting that picture of the puppy up there, that should be an img tag because it needs an alt tag, right? So the CSS version can't do alt text.

[00:03:03]
So that's why it's really important that you need to use those img tags for everything that's not decorative, if it's purely decorative then you can use CSS for it. Does that make sense?
>> Brian Holt: Okay.
>> Brian Holt: The other thing that's useful is for search engines. Search engines will also read alt tags as well.

[00:03:30]

>> Brian Holt: Inputs, we were just talking about inputs. So this is an input right here, it's something that people can type into for if you're filling out form, you wanna put like first name and last name, you would use an input tag for this.
>> Brian Holt: There are many different flavors of input tags, if you don't put anything it just assumes that you mean a text input which is the most common one, I would say.

[00:03:52]
But there is also a color picker, there's a number input, there's a date input, there's a time input, file uploader, there's a bunch of them. More than I'm not thinking of as well.
>> Brian Holt: So, I have right there numbers, dates, colors, checkboxes, radio buttons, and just stuff like that.

[00:04:14]

>> Brian Holt: We'll see more of that in the next page as well.
>> Brian Holt: It looks like this.
>> Brian Holt: Textarea, so what happens if you had to write an essay, right? You don't wanna write an essay in this, that would be terribly annoying, right? So it would be useful if you could do something like this,

[00:04:37]

>> Brian Holt: textarea,
>> Brian Holt: Text,
>> Brian Holt: All right, so I'm sure you've seen all these websites right there. They're like this big and you can write a bunch a stuff in them and you can hit enter as such, that is a textarea. So it's a larger input that it combinates larger bodies of text of them.

[00:05:02]

>> Brian Holt: Now you something you might point out to me in this point in time and you'd absolutely right is like, why is that not a self-closing tag, right? Input are self- closing tags, so why aren't textareas?
>> Brian Holt: There is not a good reason, they just aren't. They're old is the real reason.

[00:05:19]
Textareas have been around long enough that,
>> Brian Holt: Yeah, they were not made self-closing tags. I think you can put, yeah, I mean,
>> Brian Holt: If you put something in here, it'll like see the beginning value, right. So,
>> Brian Holt: You can put things in there, that would be like the initial value of whatever is in that text area.

[00:05:48]

>> Brian Holt: You don't end up using text areas very often but it's good to know about them, they do exist. If you need like long formed text from a user.
>> Brian Holt: Inputs, text areas, select, select and options, specifically. So like a dropdown, right, like I'm sure most of you have done like selected the state you're from and click on it and you find many Minnesota.

[00:06:11]
And then you click on that, right, that dropdown is a select, right? And all the individual options in it, or you guessed it, options. So it will look like something like this.
>> Brian Holt: Select, option, and then you have Seattle, Portland, San Francisco, etc.
>> Brian Holt: And we'll get more into that later, but they have various values as well, and that will be the value that's actually sent back to your server, if they select that.

[00:06:40]
So if I select Seattle, it's gonna send back to this version of Seattle.
>> Brian Holt: So, the next one is a form. A form is for if you have like a large form that someone's filling out that's like first name, last name, state, address etc., etc., like there's a bunch of different inputs, you wanna gather that all up in one place.

[00:07:08]
Use a form as kind of like the container for all of that.
>> Brian Holt: There's more to forms. We're not necessarily gonna get into that today because there's a lot of stuff you can get into with forms, and it's not particularly interesting in my opinion. [LAUGH] Yeah, forms are for grouping together inputs, text areas, selects, those kind of things.

[00:07:34]

>> Brian Holt: Tables, so tables gonna really bad wrap in HTML because, back before we had useful amounts of CSS, we use to layout websites using tables. Imagine trying to like paint a picture using Excel, and that's what writing websites and using tables felt like.
>> Brian Holt: We're way beyond that now, we haven't use table to layout things like in the decade, I would say.

[00:08:02]
But people still have this aversion to using tables because they're so traumatized by back then.
>> Brian Holt: You should still use tables if you have a table of data, right? Like if you have something that you would use Excel to display, then use a table, that's totally fine. If you're trying to layout a website, do not use tables.

[00:08:22]
[LAUGH] So, a table is like the container for the entire table, a tr is one row, and a td is one cell.
>> Brian Holt: So right here, I have a table. In fact, we can just copy and paste that and see what it looks like.
>> Brian Holt: Let's go back up here.

[00:08:50]

>> Brian Holt: Right, so I have (0,0), (1,0), (0,1), and (1,1). Let's just put these on different rows so you can kind of see what that looks like.
>> Brian Holt: Okay.
>> Brian Holt: So the table contains for the whole table, right? One tr is one row right, table row follows.
>> Brian Holt: And then we have it one td is one individual cell here, right, so I have (0,0) which is there, and then (1,0) it's here.

[00:09:30]
Then you have another tr, so that's the next row down (0,1) and (1,1), right there, make sense?
>> Brian Holt: So something that you'll kinda find just with HTML and CSS in general is we start at the top left and we work our way right and then we go down, right?

[00:09:48]
So the first one we put in here is the top left one. That's also how a bunch of stuff works in CSS, so just usually the 0.00 is gonna be the top left of whatever you're working with.
>> Brian Holt: So if I were to put,
>> Brian Holt: Let's say, another table around here, it would go underneath it, right?

[00:10:12]

>> Brian Holt: Sure enough, it does.
>> Brian Holt: Rather it's this one's 2,
>> Brian Holt: 0 and 1 and 2. Anyway,
>> Brian Holt: And then if I put another td right here,
>> Brian Holt: Here, right there.
>> Brian Holt: Yeah, makes sense, cool.
>> Brian Holt: So that's tables, and yeah, so there are many more tags. I didn't even necessarily cover all of the useful ones.

[00:11:03]

>> Brian Holt: There are things like nav and header, and footer, things like that. An article in a section and a bunch of stuff like that. So for example, you have something that's like article. It's something that you put like an article inside of, it's very descriptive of what's inside of it.

[00:11:21]
It acts just like a div. The way it mechanically works, it works exactly like a div would work. But what's nice about it, is if someone's scraping your website, like Google, they'll instantly know this is an article, this is something I can throw into where I would display an article.

[00:11:39]
It's useful for machines that are reading it. So if you use useful HTML machines that are consuming will know a little bit more about your website, you'll be able to break you higher in Google. Or be able to scrape your website in interesting and useful ways, and also screen readers will be able to read it more readily.

[00:12:00]
So,
>> Brian Holt: There is a bunch more, this will get you started but you will be learning HTML tags probably for all these little bit. Any questions about anything that we have talked about so far?
>> Brian Holt: Please.
>> Speaker 2: So, when I did the button in two different browsers, it looks different.

[00:12:20]
A, is that something that you ever have to be aware of? And B, is my hypothesis correct that it's sort of like emoji between like Android and Apple kind of thing?
>> Brian Holt: Yes to both of your questions. [LAUGH] So it's something you should be aware of. Usually that's okay, but when you use CSS, you can make them look the same across operating systems and browsers and all that kind of thing.

[00:12:49]
But yes, it will look different by default, if you don't change anything. You will almost always change something.
>> Brian Holt: What's the other question?
>> Speaker 2: And then, is it just the difference in the browser as the same as an emoji looks different between Android and iPhone, for example?
>> Brian Holt: Yes, so it's the browser that's making those different.

[00:13:11]
Cuz the browser is more or less trying to have convergent looking things but a lot of it is left up to them. Google and Chrome tends to make things look more like Google, right. So it's more like material like design, it's more flat, all those kinds of things.

[00:13:29]
Whereas, Firefox has its own way of thinking, Edge has its own way of thinking. So, it's those kind of details are left up to the browser vendors.
>> Brian Holt: It's a good question.
>> Brian Holt: In fact, that's actually one of the fun/horrifying parts of being a frontend developer, is making things look the same across browsers.

[00:13:48]
That's something that you constantly, constantly battle with is, this works in Firefox but it doesn't work in Chrome. How many times have we said that? I've said that literally yesterday, if we're being honest. [LAUGH] I literally had to fix something for that very reason. So, it's one of the common problems that we deal with is cross problem, cross browser problems, and the worst by far these days is Mobile Safari.

[00:14:16]
I spent so much time fixing things for Mobile Safari, it used to be Internet Explorer. But luckily, not many people use Internet Explorer anymore. So,
>> Brian Holt: Good questions.

