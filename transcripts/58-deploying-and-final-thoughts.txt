[00:00:00]
>> Brian Holt: This is how you would deploy this application to the cloud. And you could do this during, using Microsoft Azure, and I go literally step by step here of how you would do that. I'm not gonna do that for you right now, but definitely go check it out.

[00:00:17]

>> Brian Holt: You can actually even deploy directly from VSCode which is A+, it's really easy. Do I have it in.
>> Brian Holt: Yeah, anyway.
>> Brian Holt: Anyone have questions about deploying before I actually move on to just wrap up the course?
>> Speaker 2: Well, we find more information on this, in the previous course that you mentioned by the same person who was doing like a full stack.

[00:00:48]

>> Brian Holt: Jim does have, he talks a lot about how to deploy code. So mine shows you how to do it to Azure. His shows you how to do it to DigitalOcean. So it's actually probably good to look at both of those. And there's another about working with Amazon as well, right?

[00:01:02]
So who wrote that course?
>> Brian Holt: I don't remember. There's another Frontend Masters course about deploying to Amazon as well. They're all slightly different.
>> Speaker 2: Okay, so what you're saying is that this is like basically what we need to know in order to do the thing.
>> Brian Holt: Yeah.
>> Speaker 2: There's not an extended other day course that we would need to.

[00:01:22]

>> Brian Holt: It's a deep subject, I mean there's a whole job that does that, which is DevOps, right? But this will get it out there and working in production. Yeah, for sure. This is the first step.
>> Brian Holt: The complete first step for sure.
>> Brian Holt: Okay, so let's wrap this up a little bit.

[00:01:44]
So congratulations, you made up through this like this is a grueling course like I dumped a bunch of knowledge on you. So the fact that you like still upright in a chair or mostly upright in a chair [LAUGH] someone just fell over. [LAUGH] Is it's an accomplishment like this is tough stuff.

[00:02:01]
As soon a lot of people give up way before this point. So I know this is tough like I wrote it, so I know how tough this was, and I did not go easy on you. But I wanted you to understand all the different concepts that are like the base level.

[00:02:14]
And if you definitely have the base level knowledge now, for being a frontend developer. So you are prepared definitely to go into something like a boot camp without some interest deal. You're definitely in a place that you go on to do more courses and on Frontend Masters. You're definitely in a place that you can teach yourself and eventually get a job doing this.

[00:02:33]
So congratulations you're more than halfway there.
>> Brian Holt: What's hard about web development is that you have to understand a lot of things in order to just start. It's kinda like trying to like learn a new language where you have to understand a bunch of grammar before you can even start speaking to someone which is tough.

[00:02:51]
So I got a bunch of advice for you, the other thing that I wanted to point out here, a lot of times it's just knowing the vocabulary to Google, that's half the battle. So if you know how to Google something, that means you know how to learn it.

[00:03:05]
So hopefully this gave you a whole bunch of new vocabulary to Google answers to your questions.
>> Brian Holt: So my final advice for you, always ask questions. If you get a job doing this, ask the people around you until they're annoyed with you, and then keep asking them. And I'm not actually joking about that.

[00:03:23]
Ask so many questions that you annoy yourself. Because you will learn so much faster, what we'll take you three hours to figure out by yourself. Someone can just say, yeah, you do it this way. It can save you so much time. You will be a much better engineer.

[00:03:37]
I still has dumb questions all the time, believe me. I'm like asking address here and to some of the people the I worked with is like Brian asked dumb shit all the time. [LAUGH] It's okay. Please ask tons and tons of questions, okay? Google everything and then Google it again when you forget it.

[00:03:54]
[LAUGH] I probably said that like six or seven times over the course of this. It's because I've heard so many new engineers say, like I feel like it's cheating to Google things, and it's just not true at all. Don't burn out, it's really with these kinda things that are really difficult to just go out in a flame of glory.

[00:04:12]
And when you truly, truly burn out, which I have before, once. I would open my computer and feel panic because I was so stressed and so sick of sitting in front of the computer. So if you get there, it takes a really long time to unravel that. So recognize like when you're like approaching to a point where you like really can't handle this anymore.

[00:04:34]
Close your laptop, go outside, go do something fun, go do something you're excited about, take some time off, go on vacation, do all these things and then come back to it. Every developer will tell you that one of the most effective debugging techniques is walking away from your computer.

[00:04:51]
So you close it go take a shower, I have so many revelations in the shower. And then okay, and I come back and I fix my problem. Sometimes that just takes my brain all second to assimilate information. I'll be thinking about like something out and just pops out in my hand.

[00:05:05]
So that's another thing that you should definitely do.
>> Brian Holt: If something interests you, just chase it. A lot of times people are trying to get the most marketable skills, I feel I have to learn React. That's not the best way to do this in my opinion. This is just my opinion in this particular case.

[00:05:24]
It's so much easier to chase something that you're really excited about. I just have a motivational problem in general that I'll try it and have to go learn something that I just don't wanna do. And then I get really burnt out really quickly. Whereas, I'm super excited about Machine Learning and it's like go learn everything I can about it, like you can't tear me away from a computer.

[00:05:44]
It'll be 3 AM and I'm like what am I doing with my life? So that's really helpful to do. Don't compare yourself to other people. This is another problem that I see a lot with new engineers, that they're like, this person knows this and I don't know it, and I feel dumb about it and that sucks.

[00:06:03]
And it's not helpful, and it's usually not true as well. I was actually happy with how I put it in here. You have a perfect knowledge of your short comings and an imperfect knowledge of their accomplishments. This means, you are usually underestimating yourself and you're overestimating them. So you don't know what they are going through, you don't know what they're actually understanding.

[00:06:24]
So just comparing yourself to other people It's not a winning game. Compete against yourself, I guess is what I'm trying to say. Programming is a cycle of feeling like an idiot and feeling like the smartest person in the world. And it's a very, very short cycle between the two.

[00:06:41]
And definitely do not let either one of those feelings go to your head. Don't let it get you down and don't become a stuck up asshole.
>> Brian Holt: And then this one's just kind of really important to me and I just really wanted to say it out loud. Which is the programming world has recently been a world dominated by white dudes, guys that look like this.

[00:07:04]
If you're a white guy, work extra hard to make sure that everyone feels included, and that's an active effort, that takes volition to do that. If you're not a white dude, I'm not gonna give you advice, cuz I'm sure it would not be any good. But I would say seek advice from people that are smarter than me and that have been in the field.

[00:07:21]
But no matter what it takes everyone working together to make the programming world inclusive and inviting to everyone. So I'm inviting you to work hard on this problem to make this a better place for everyone. If you like the course, please give it a star GitHub. You can click here it'll take you there, and you just click little star.

[00:07:40]
It helps me, and it helps share this to other people that might wanna see the course as well.
>> Brian Holt: And then here, you've kind of seen these things down at the bottom but if you wanna see all of these things cheering on, you deserve all of these. I asked them to kinda tell you all these different things.

[00:07:59]
So definitely go check this out, you deserve all these things people are saying you did it. The only people that can't become developers are those that give up too early. It's things like that, it's really cool. So there's like 60 of them in there you should definitely go read them.

[00:08:15]

>> Brian Holt: Cool, does anyone have any final questions before we wrap up?
>> Brian Holt: Yes?
>> Speaker 2: Is there a person on GitHub that you can think of that actively asks for contributors?
>> Brian Holt: There is a tag.
>> Brian Holt: First of all, Kent C Dodds is just really good at that. First-time contributors to open source.

[00:08:40]
First timers only, there are issues that they put out there, that they will only let first-timers solve. So that one is really cool.
>> Brian Holt: Check that one out.
>> Brian Holt: Sometimes repose will put first timers or easy for people to getting introduced to projects, so look at those tags in the projects.

[00:09:09]
Okay, I know React GS does it. So Facebook/react. If you go into here to their Issues, Labels.
>> Brian Holt: They have these listed by difficulty and good first issue. That's a good one. So you can see these ones they've identified as things that you could to today to contribute to React, right?

[00:09:35]
And lots of libraries have that. Does that answer your question? Cool.
>> Brian Holt: Good question. Any other questions?
>> Brian Holt: Definitely contribute to Open Source like that's a big thing as well. You don't have to as well. The best thing you can like start to contribute to open source is just using Open Source.

[00:09:54]
Then you'll have an opinion about it and when you have an opinion about it, then you can make better contributions to it. Okay, I'm way over time, but I'm so excited to have done this. I'm so happy that you all stuck with me. So thanks for coming and please hit me up on Twitter, on GitHub, LinkedIn, snail mail, I don't know, whatever you wanna do.

[00:10:13]
All right, thank you.
>> Group: [APPLAUSE]

