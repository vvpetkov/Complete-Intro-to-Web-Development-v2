[00:00:00]
>> Brian Holt: If we're gonna build a house, a craftsperson needs their tools, right? So I'm gonna go through here. I'm going to basically talk a little about what I'm going to be using and make some recommendations to you of good tools I think to start with. That being said, if you have tools that you already like or that you want to use, I will try to as best as I can with my knowledge accommodate all the tools that I have knowledge of.

[00:00:28]
That being said, if you're gonna be use tools that esoteric then you are on your own. [LAUGH]
So, I am using Mac OS today, if you can't tell. I will do my best to try and explain Windows as well. That's quite funny, cuz I work at Microsoft, and I do not use [LAUGH] Windows.

[00:00:51]
So, I will do my best, specifically with Bash, and Windows it gets really sketchy really quickly, so we will work through it together. I think is the answer to that question. Anyway, we'll get there. If you're on Linux, I have a little bit more knowledge there of, and what's nice about using Linux is it's pretty similar to Mac anyway.

[00:01:13]
So if you're using Linux you should be able to follow along, more or less, with what I'm doing. Also I expect, if you're using Linux that you already have some of that pre-existing knowledge anyway. So, asking a developer about their tools is like, well it's a giant mistake, because they will rant at you for hours about why they right, and why everyone else is using terrible tools.

[00:01:40]
I don't know why we felt this need to like validate ourselves. It's like, I'm using this tool, and you have to use a tool, or you have to use this as well, or you're an idiot, I don't know. Some dumb stuff like that, and everyone's trying to use like the latest shiniest stuff.

[00:01:53]
Just find tools that work for you. Like if something works for you, and speaks to you, then just go with that, and that's awesome, and I really encourage you to go down that. You don't have to use what's new. You don't have to use what's shiny. Just use what works for you, and be open-minded.

[00:02:10]
Do try new tools and see if they do work for you, and if you find yourself fighting your tools, then you should question your tools. That's the other thing as well. A little bit of investment in making sure that you have the best tools will go a long way.

[00:02:28]
So you should alway be kind of thinking about like how can I improve this. Okay, the first thing is we're gonna be building websites. You need to choose what browser you're going to use. I am using Firefox. I'm a huge Mozilla fan, just in general, with of their mission and how they're going about making the web a better place.

[00:02:50]
So I will be using Firefox. You are definitely welcome to use Chrome. I think most people will probably use Chrome, and that's okay too. Both of them are world-class browsers that have great developer tools, as well as Safari, and Edge. I don't know as much about Opera. But definitely in this class, I can speak really well to Edge, Safari, Chrome, and Firefox, and I will be using Firefox.

[00:03:19]
If you are using Safari, if that's what you're electing to use, I have this link here for you. Make sure you enable the developer tools. That's quite important. [LAUGH] Everything else I've just enabled by default. But yeah, Safari you have to actually go check a box that's like I'm a developer, please show me the developer tools.

[00:03:40]
Questions about that? Yeah?
>> Student: Do you use developer edition at all in Firefox or just the regular?
>> Brian Holt: At work I actually use nightly, which is like the even more bleeding edge one than the developer edition. Today I'm just gonna be using the normal one. I don't actually really know the difference between all.

[00:04:01]
There's like four different versions of Firefox. It used to make a difference because the nightly developer one was so far ahead, they had made so many changes to it, but as of maybe six months ago, they kind of merged that all together, and now just the stable one is really great.

[00:04:23]

>> Brian Holt: Cool. Good question.
>> Brian Holt: Anyone else?
>> Brian Holt: Okay. The editor. So this is the tool that you're going to be using to write code actually.
>> Brian Holt: There are many many options, and this is probably the most contentious thing that you can ask some of them is that what editor do you use, cuz everyone has an opinion, and they're all terrible.

[00:04:48]
[LAUGH]
I personally use Visual Studio Code. This is no surprise, cuz I do work at Microsoft, and I work closely with the Visual Studio Code team. That being said, it is a fantastic editor. I'm a huge fan of it. I was actually using this before I even worked at LinkedIn.

[00:05:07]
I used this when I was working at Netflix. So this is actually an opinion I held before I started working at Microsoft. The biggest thing that gave me pause about Visual Studio Code, when I was thinking about trying it, is I used to use Visual Studio when I was in college, and it is a huge, just it's a big program.

[00:05:30]
It's very heavy. It takes a lot of resources, it's for writing C++, and serious programing, and things like that, and so I didn't wanna go back into that, but it turns out Visual Studio Code, the only thing that it really shares with that is the name. It's completely different, it's written totally different, it's a different code base, it's written in TypeScript, which is a flavor of JavaScript, it's totally different from Visual Studio.

[00:05:53]
So I have a link on here, if you wanna download it. I highly recommend it. I'm a big fun. It's very, I would say, beginner friendly as well, which is another reason that I recommend it to you, and there's a huge amount of plugins available for it as well.

[00:06:12]
So if you have something that you want it to do, someone's probably written a plugin to help you do that as well, which is really cool, and the plugins are written in JavaScript so if you have an idea of something that you want your editor to do, you can write the code yourself after this right, because you'll have the tool JavaScript that you'll be able to use.

[00:06:31]
If you're not filling that, feel free to use Sublime Text 3. That's what I used for like a decade, so I'm also very very familiar with Sublime, it is a great tool. It's very fast. That's what I liked about it, it opens files really quickly. It's very efficient.

[00:06:49]
And there is Atom which I haven't spent any time with it, but there are people that do love it. It's written by GitHub. Sublime Text is written by just a guy that, now he has two or three employees working with him as well. Atom and Visual Studio Code are 100% free.

[00:07:04]
There's not even a premium tier, it's just a free tool. Sublime Text 3 is free to download and it's forever in trial mode, it has a trial that never expires. So I think once you buy, I think it's $80 if I remember correctly, and then it will just stop showing an annoying pop-up that's all, whenever you start up the tool.

[00:07:27]
It's worth paying. For me, I spend enough time looking at my editor, I've have paid for sublime several times over, and I probably should pay them more because they bought me a decade of productivity. Just worth something I suppose. If you want something more Visual Studio-esque, like something a little bit more like Eclipse, or NetBeans, or something like that, there's a tool called WebStorm.

[00:07:50]
I have not used it either, but it's a more complete suite of tools I would say. I'm not gonna speak a lot more to it, but it is not free. You'd have to pay for it, but the people that do use it, swear by it, so Feel free to check out web storm as well.

[00:08:06]
They make things, pie charm and ruby mine and a bunch of other things, what's tell it Jay, bunch of things like that. And they are smart people. Lastly, I'm gonna state that this tools exist and that you should not use them [LAUGH] Unless you've already used them. There's a tool called Vim and there's a tool called Emacs.

[00:08:29]
These are command line tools, they're very difficult to use, they're for someone far smarter than I am and also, you will know everyone that uses them because they will tell you right away that they use these things [LAUGH] I'm not upset. I'm so sick of hearing about them, so.

[00:08:49]
Anyway, they exist. I'm gonna tell you don't use them because the people that are already using them are gonna say, screw you, I'm not gonna keep using them. And everyone hopefully will listen and not use them so. Any questions about that? I bet you there is someone [INAUDIBLE] Freaking about this.

[00:09:07]
Yep. Knew it. [LAUGH] They're great tools. They just have a super steep learning curve, and that's not what you wanna do today. You already have a mountain ahead of you.
>> Student2: Actually, most people are saying that Vim was a nightmare and a rabbit hole to go down, not the other end way around.

[00:09:28]

>> Brian Holt: Yeah.
>> Student2: You're going on defending it.
>> Brian Holt: Yeah.
>> multiple: [LAUGH]
>> Student2: First saying that there was a lot of wasted time.
>> Brian Holt: I'm sure that people are gonna contradict me. But the people that I've talked to about it, it was a giant time suck and I kinda regret doing it, but now that I've done it, I'm gonna continue doing it.

[00:09:43]
Right? That's more or less the sentiment about it. It's really interesting to watch someone that's a wizard at Emacs, Nina Zacharenko, one of the other Frontend Masters teachers that I used to work with. Actually, and now work with again. She's a wizard with Emacs. It's really crazy to watch the stuff that she can do super quickly.

[00:10:01]
Or the Vin masters, Ryan Florence, they just fly. I don't wanna do that though, I don't care. I don't want to spend that much time [LAUGHS] So, you should. That's another thing, tackle one mountain at a time. Don't try and learn the editor at the same time as you're learning to code.

[00:10:23]
Any other questions? Our resurgence said, Vim is terrible, I'm listening.
>> Brian Holt: Okay, The Terminal. So, there is two things that I'm kinda separating out here, there is the shell and the emulator. And hopefully, I can kind of explain the difference to you. So, I'll just bring up my terminal here.

[00:10:51]
Terminal looks like this. Right? I'm sure most of you have seen this. It's a little scary for new people offer each approach in code, this is the matrix. Right? It's actually just a really fancy File Explorer. Or maybe it's a less fancy files floor. Let's go with that.

[00:11:08]
This, right, you click on something. And like you click on here. It's the same thing with here. I would just go to applications, right. And I can see what's inside of the application, which is nothing. That was CD talks. Right? And you can see what's in there. It's okay, I wanna go into webdev.

[00:11:26]
Right? And you can see what's in there. We're gonna spend an entire section on that. But that's where the terminal is. Right? So the emulator is actually the window that you're running this thing in. So, that would be, in this case, I'm running it in something called iTerm and it really doesn't actually matter too much.

[00:11:48]
There's one built-in to Mac called Terminal.App. Looks like this. And you can see here, it is the same thing, right. So, that's what I'm trying to say here. It doesn't really matter what emulator that you use. So, if you don't have anything installed, just go ahead and use terminal dot app.

[00:12:13]
I'm told it's the fastest by far. [LAUGH] The reason why I continually using iTerm is, it does a thing where I can actually have two shells next to each other and that's just really useful to me. Anyway, so that is the emulator, it does not matter, so just pick one and go with it.

[00:12:38]
So, I'm using iTerm2 today. And the default Terminal App is great, there is another one called hyper which is the hipster one to use at the moment, it is written in JavaScript which is pretty cool, the last time I used it was really slow so I just got sick of it went back to i term.

[00:12:58]
But, I'm told, it's gotten better since then. So, feel free to use Hyper. If you are on Windows, I'm told that Hyper also works really well for Windows. And there's one called cmder, I don't know anything about it, so use it at your own risk. If you're on Linux, I would just suggest use whatever the one that Linux came with, whatever your flavor of Linux came with.

[00:13:25]
In other words, I have no idea. [LAUGH] So, any one of these, totally fine, does not matter. For the shells, that's actually what the code that's running inside the emulator, right. So, you have iTerm, and then iTerm is running something inside of it, right. That's called the shell and it does matter which shell you're using.

[00:13:51]
Use Bash, please, today. If you're using something else, you are on your own and I do not know how to work ZSH or any of the other ones. Actually, I quite like Fish, which is another one. But we are not using it because no one else uses Fish besides me.

[00:14:07]
So, if you are using Fish, okay, cool. So, Fish is cool. Anyway, just use bash. We're using bash today. And the reason being is that, every time that you google something, the answer is always written in bash, a hundred percent of the time. No one writes in anything else besides bash.

[00:14:29]
So, that's a really good reason to use bash. It's ubiquitous. It's everywhere. Okay, so, that's your terminal tool, we will get much more into that probably more towards the end of tomorrow.
>> Brian Holt: Lastly, just you should be really careful where you get your news from, you should also be really careful what developer resources you are looking at when you are Googling things.

[00:14:56]
And, so, I wanted to give you a few that I trust personally, that whenever I'm Googling something these are the first resources that I see if they have anything on it. So, my favorite developer resource of all time that I love and I literally have it open all the time, I'm not exaggerating, is literally always open on my laptop is the MDN.

[00:15:18]
It used to stand for Mozilla Developer Network and now it's actually, they've just said now it's called MDN. It doesn't stand for anything anymore. It's just called MDN. It's from Mozilla. It's @developer.mozilla.org. And it is, it's just the bible. Right? It's everything about Web programming in one spot.

[00:15:38]
So, if I have a question about, let's say h1s, you just click here and it just has it's complete. So, it's gonna have everything on here, but it's also approachable which is kind of rare. Either something is complete and complicated usually, or it's not complete and simple. They kind of strike a good balance here, so MDN is just the best.

[00:16:08]
Anything that you can always trust is something that it's on the MDN.
>> Brian Holt: So yeah, great, great resource. There's another one out there called W3 Schools that usually comes up before the MDN, and I would suggest that you skip W3 Schools and go to the MDN
>> Brian Holt: I am a huge fan of CSS Tricks.

[00:16:31]
This is specifically very helpful for CSS and HTML, but they also have really good JavaScript resources as well. They also have amazing articles, just in general as a publication, but they have here like with Flexbox cuz that's usually what it is. So, for example, we're gonna be learning about Flex later today, and they have this amazing resource of how to do Flex really well.

[00:17:00]
It has diagrams and it's really, really well-written, so for learning about CSS and HTML, I definitely suggest CSS Tricks.
>> Brian Holt: For video content, there's a website called Frontend Masters, okay? I give it like a four out of ten. I'm just kidding, it's great, I like it a lot.

[00:17:22]
I recommend a ton of resources in here, not because they pay me to or anything like that. I mean, they could, you could, [LAUGH] but because I legitimately think it's awesome content. Like I have watched a bunch of stuff on there myself. They're kind of teachers that they get are really great.

[00:17:39]
So, if it's on in front of the Master's, you can pretty well guarantee it's going to be good stuff. It's worth watching. Lastly, if I'm working with a library or a framework or some, like, specific piece of technology, it's usually a good idea to go directly to the documentation to read it.

[00:17:56]
If I'm working with, like, React, I'll usually go to the React documentation. It's good to refer those because the developers will tend to keep those things up to date whereas like a StackOverflow answer might be out of date. So, that's a good thing to keep in mind as well.

[00:18:10]
Another thing also I don't have on here, but StackOverflow actually uses a pretty good resources as well. Cuz usually like even as things progress, people will re-answer questions and upload them and so Stack overflow's also a good place to get questions answered. Frontend Masters does this really cool thing called the Frontend Handbook.

[00:18:34]
It's written by this guy named Cody Lindley, who's a really smart guy. And it's just kinda like a huge overview of the entire topography of the frontend development world. And it's just great. It's super exhaustive. They go over a bunch of stuff, yeah, it's great. So it's also good to just kind of peruse and go through, and see what's in there.

[00:19:05]

>> Brian Holt: And it's free, which awesome as well.
>> Brian Holt: Cool. Any questions about any of the tools that I've proposed?
>> Student: Do you cover from Microsoft or for Windows about what to use the terminal.
>> Brian Holt: I did Yeah,we talked about hyper or CMDR. DER, rather. It looks like that.

[00:19:35]
I mean it looks nice. That's usually how I judge my tools.
>> Student2: VS code also has terminals built into it.
>> Brian Holt: That's a good point. In fact, it's a great point. If you go into VS code. Do I have VS code up in here?
>> Brian Holt: So this is VS code.

[00:19:55]
This is what it looks like. And I think it's Ctrl+tilde. Yeah, it brings up this terminal down here in the bottom. And you can actually use the terminal built into VS code as well. So Good point.
>> Student3: Yeah, I was asking if we needed to download Bash.
>> Brian Holt: Which is a great question, do we need to download Bash?

[00:20:19]
The answer to that question is no, because every operating system should already have Bash installed, including Mac, Linux and even Windows 10 now actually does have it. If you are using Windows 10, there are these steps right here that if you click on it, they'll take you to a link on the Microsoft.

[00:20:43]
We'll take you to how to enable it for Windows 10 If you're on anything before Windows 10, you are unfortunately out of luck. [LAUGH] So the only thing here that you should have to actually download is whatever editor you're using. I imagine most of you probably already have a browser that you're comfortable with, but if not then download the browser that you want as well.

[00:21:05]
Otherwise, everything should already be on your computer.

