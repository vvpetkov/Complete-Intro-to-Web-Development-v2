[00:00:00]
>> Brian Holt: We have 22 sections here, it seems like a lot, and that's because it kind of is. [LAUGH] But we'll get through this, and yeah we'll go ahead and get into the introduction of the course. So I'm really, really excited about this of all the courses that I've taught, this is the one I've definitely put the most time into.

[00:00:22]
And this is a particularly difficult subject to teach, just because I've been doing programming for a really, really long time and so I have forgotten what it's like to learn how to write code. So I have all these layers of knowledge in my head and it's hard for me to pull them back.

[00:00:39]
To say like, okay, how can I speak to someone that doesn't have the same vocabulary that I do, right? Something that I spent years and years taking for granted. So your responsibility today, both online and in person is to keep me honest. So if I'm using terminology that you don't understand or acronyms that you don't understand, it's not that I'm trying to be a jerk, it's not that I'm trying to inflate my own ego.

[00:01:01]
My ego is plenty big, believe me, [LAUGH] it's because it's really difficult to pull back those layers and realize that what I'm saying is not vocabulary that you have. So, if you're online tell the moderate that you don't understand something, if you're in person just raise your hand.

[00:01:23]

>> Brian Holt: That being said, I worked really, really hard to try and put this on common terms terminology, so hopefully that works out. Okay, so there are some tips here to succeed in this course, you don't have to be a wizard at math to write coding. In fact the two subjects, in my opinion, are quite orthogonal.

[00:01:45]
In the sense they're not, you can be great at math and terrible at programming and you can be great at programming and terrible at math. I'm definitely the latter of those two things, I don't know if I'm great at programming but I'm not very good at math. And so that's a lot of times when people are approaching coding that's one of the first things that I hear is that I wasn't very good at math, or they kind of try to relate this back to math.

[00:02:07]
And like there are mathematical things in programming, like if you're gonna do like data science and things like that. But that's not necessarily, you're not going to be doing calculus, right, I don't think I've ever done calculus with programming. So, that's something that you should use yourself like right now, especially what we're doing today doesn't have a lot to do with math.

[00:02:31]
Like I say here, in fact I see many artist, lawyers, linguists that actually have great success writing code. So, yeah just know that you can definitely do this, this is open to everyone. In fact I will say this is actually more similar to learning a foreign language than it is to learning math.

[00:02:53]
In the sense you learn a new way of expressing yourself, that you have an idea in your head, and you want to express that idea, basically, as code. It's the same thing when you're learning a language, you have this amorphous idea of what you wanna say to the person, and you have to use grammar to express that.

[00:03:09]
I would say that's probably the closer analogy.
>> Brian Holt: So that being said, what you're gonna do today is hard. [LAUGH] I'm sorry that there's no two ways about it, but learning how to code is not a simple thing. It's actually quite difficult, and so I guarantee you, while you're going through and learning some of these things, they're just gonna like come up to you like this is hard, I don't get this.

[00:03:33]
And then you start kinda going to these files like I should this where I can see what this other person's doing, and they get it and I don't get it yet. Don't go there, like it's not a useful place to be in your brains. Don't compare yourself to other people, don't feel like you should be getting things like, you either do get it or you don't get it.

[00:03:51]
And both of those things are okay, right, there's no right way to do this, there's no correct speed that you should be going at. So just learn on your own pace, learn in your own terms, and sometimes you have to recognize like my brain is exhausted at this moment in time and I need to stop.

[00:04:09]
Take a break, go for a walk, all that kind of stuff, before coming back. So just recognize your own feelings, and like how you're doing, and kind of take stock of that as we're going. And just take it easy, I think that's kinda what I'm trying to say here.

[00:04:29]

>> Brian Holt: This is this sounds really important right here, never feel afraid to google anything and everything. I think I kinda got this feeling from school where I felt like I was googling something it means I was cheating. But just google everything it's not cheating, in fact it actually a requirement.

[00:04:48]
Part of what you're learning today is how to google things, in fact, that's kinda what it is to be a programmer. Is that we're just giving you additional vocabulary of how to google things, you are a professional Googler today. So, please, please like any time you don't remember something, if you don't remember the order something goes in, all that kinda stuff, just Google it, right away.

[00:05:11]
So it's not cheating, it's a skill.
>> Brian Holt: Don't be afraid to copy and paste code, I see a lot of people online saying like don't copy and paste this, blah, blah, blah, whatever. Just copy and paste it, make your stuff work and then work backwards to see how it works, right, that's fine too.

[00:05:30]
Like I program by StackOverflow all the time [LAUGH], again that's a skill as well. So definitely do that, if you're not familiar with StackOverflow, that's a website where you can go and ask programming questions and people will answer them for you. It's old enough at this point that most of the questions that you're going to have plenty of other people have had these questions before.

[00:05:53]
So if you just search for it on StackOverflow, it'll probably come up. So, that's a great resource, you should definitely be checking out StackOverflow as we go through things. Be sure to ask dumb questions, if it's not today, to someone else. You can always reach out to me on Twitter, my direct messages are always open.

[00:06:12]
So please ask lots of questions to anyone that can answer them.
>> Brian Holt: And [COUGH] for me personally, I can be a bit of a slow learner. And so for me, it's repeatedly exposing myself to information. And like the third or fourth time that I see it or I Google it or find it on StackOverflow, that's when it finally sinks into my brain.

[00:06:35]
So, if you're like me then just continue to expose yourself to that information, and maybe hopefully someday, it'll sink in, or you'll just get really good at Googling that one web page, so.
>> Brian Holt: So, what's really difficult about learning to code is specifically with web development. Is you have to learn a lot of things all at once, in order for a kinda, get like a basic layer and it's really tough because you have to kind of ignore some things.

[00:07:06]
Like, we're just gonna throw a bunch of stuff at you and parts of it you're just gonna have to ignore and just realize that you're gonna come back later and more deeply understand things. I get this with some students that they wanna understand that every piece as it goes together and there's some parts that are just not worth learning right now.

[00:07:24]
And that's really tough for some people to say like ignore that, and they're like no I don't wanna ignore it, I wanna learn that right now. And you'd have to recognize that your brain only has so much capacity for shoving stuff in it all at once. And so if you start shoving like minor details you're kind of like precluding yourself from right now learning actually more important things.

[00:07:45]
And again I would compare this to learning a foreign language, because in order to like actually have a full conversation with someone in a foreign language, you have to understand actually quite a bit of stuff, right? You have to understand like grammatical structures and syntaxes and conjugations and agreements and those kinda things.

[00:08:02]
And it's kinda the same with programming, you have to understand this whole set of things before you can kind of put pieces together. So definitely what I'm not trying to do to you today is, have you ever seen that picture, how to draw an owl? [LAUGH] It's like draw a circle, and then step two is draw the rest of the owl.

[00:08:19]
[LAUGH] I'm trying not to do that to you today. So hopefully what I'm gonna present you with is like, here's a mostly complete arrow, and like now just draw the eyes. Like I want to like learn things like that, you kinda have to accept like I drew most of the eye for you in the first place and eventually you will learn how to like do that later.

[00:08:37]
So, that's kinda the methodology for today.
>> Brian Holt: Yeah, lastly this is not a get rich quick scheme, and I get that quite a bit as well from people learning how to code, is they wanna get like a Google job making $500,000 a year today. And I was like, this is actually a lot of work, and despite the fact that it doesn't require you going to a university for four years and getting a certificate and that kinda stuff.

[00:09:06]
It's still a turn of work it requires a lot of investments, so like be prepared to work hard, like this is not something that's gonna make you rich overnight so,
>> Brian Holt: That too.
>> Brian Holt: And entry level jobs are out there, but you're gonna have to compete and work hard for them.

[00:09:26]
So, it's possible, you should definitely try, I think but it is hard, so.
>> Brian Holt: The last thing I wanna say is just kind of how I structured this course, and this is coming from a lot of iterations from teaching a lot of these workshops. This used to be more structured towards like exercises, like almost like homework and homework that just paints as I said cuz I hate homework.

[00:09:54]
[LAUGH] I was not very good at homework when I was in college. So, I found that when I gave these exercises to people a lot of times they would just like look at it and say, I don't know where to start, I don't know where to do this.

[00:10:06]
And it actually just bore like a lot of frustration out of people rather than actually people like sitting there and learning. So this workshop is more oriented towards experimentation and playing, so rather than having like a clear objective I present you with a bunch of code. And then I was like okay, now just mess around with it and break it and unbreak it and, try doing this and you know refreshing and like all these kind of different things, and then we have a couple of big projects.

[00:10:33]
And that's kinda where you'll actually like get in and like actually write things by yourself but during the course, in fact we'll get to that in just a second. There's actually live code inside of this website that you can just play with directly which should be hopefully beneficial for you.

[00:10:48]
This is how I think I would prefer to learn so I'm hoping that this would work for you as well.

